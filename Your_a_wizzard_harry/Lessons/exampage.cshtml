@{
    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Harry_Potter.mdf;Integrated Security=True";

    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);


    string mail = "";
    string GetquestionId;
    string Getquestion;
    string Getexamid;
    string question;
    int amountofquestion;
    int totalpoints = 0;
    int questionId;
    int Exam_Id;
    var housepoints = 0;
    int newhousepoints = 0;

    int counter = Request.QueryString["counter"].AsInt();
    int lesson_Id = Request.QueryString["lesson_id"].AsInt();


    Getexamid = "SELECT exam_Id from exam where Lesson_Id = @0";
    Exam_Id = db.QueryValue(Getexamid, lesson_Id);
    string getamountofquestions = "SELECT COUNT(question) FROM Questions WHERE exam_Id = @0";
    amountofquestion = db.QueryValue(getamountofquestions, Exam_Id);

    if (Session["totalpoints"] != null)
    {
        totalpoints = Convert.ToInt32(Session["totalpoints"]);
    }
    if (Session["mail"] != null)
    {
        mail = Convert.ToString(Session["mail"]);
    }
    string getusername = "SELECT Username FROM Profiel WHERE Email = @0";
    string username = db.QueryValue(getusername, mail);
    string checkifisfraud = "SELECT Marked_Lesson From Profiel_Has_Lesson WHERE Profiel_Username = @0 AND Lesson_Id = @1";
    var marked_lesson = db.QueryValue(checkifisfraud, username, lesson_Id);
    if (marked_lesson !=null)
    {
        Response.Redirect("~/Lessons/Lessons");
    }
    if (IsPost)
    {


        int answer_Id = Request.Form["Q1"].AsInt();
        string checkifcorrect = "SELECT corret From answer where answer_Id = @0";
        var iscorrect = db.QueryValue(checkifcorrect, answer_Id);

        if (iscorrect == true)
        {

            GetquestionId = "SELECT Question_Id from Questions where exam_Id = @0 AND Order_Prio = @1";
            questionId = db.QueryValue(GetquestionId, Exam_Id, counter);
            string getpoints = "SELECT points FROM Questions where Question_Id = @0";
            int pointforquestion = db.QueryValue(getpoints, questionId);
            totalpoints = totalpoints + pointforquestion;
        }
        if (counter == amountofquestion && counter != 0)
        {
            string pushpointsforusers = "SELECT User_Points FROM Profiel WHERE Email = @0";
            var userpoints = db.QueryValue(pushpointsforusers, mail);


            string gethouseId = "SELECT House_House_Id FROM Profiel WHERE email = @0";
            int houseId = db.QueryValue(gethouseId, mail);
            string gethousepoints = "SELECT Points FROM house WHERE House_Id = @0";
            housepoints = db.QueryValue(gethousepoints, houseId);
            newhousepoints = housepoints + totalpoints;
            int newuserpoints = (userpoints + totalpoints);
            string pushhousepoints = "UPDATE House SET Points = @0";
            var push = db.Execute(pushhousepoints, newhousepoints);
            string pushUserpoints = "UPDATE Profiel SET User_Points = @0";
            push = db.Execute(pushUserpoints, newuserpoints);
            string insertuserandteacher = "Insert Into Profiel_has_Lesson (Lesson_Id,Profiel_Username,Marked_Lesson) VALUES (@0,@1,@2)";
            push = db.Execute(insertuserandteacher, lesson_Id, username, 1);
            Session.Remove("totalpoints");
            Response.Redirect("~/Lessons/Lessons");


        }
        counter++;

    }
    if (counter == 0)
    {
        counter++;
    }
    string selectexam = "SELECT exam_name From Exam WHERE Lesson_Id = @0";
    var GetExam = db.QueryValue(selectexam, lesson_Id);

    Getexamid = "SELECT exam_Id from exam where Lesson_Id = @0";
    Exam_Id = db.QueryValue(Getexamid, lesson_Id);
    Getquestion = "SELECT Question from Questions where exam_Id = @0 AND Order_Prio = @1";
    GetquestionId = "SELECT Question_Id from Questions where exam_Id = @0 AND Order_Prio = @1";
    question = db.QueryValue(Getquestion, Exam_Id, counter);
    questionId = db.QueryValue(GetquestionId, Exam_Id, counter);


    string getanotherawnser = "SELECT answer , answer_Id FROM answer WHERE  Question_Id = @0";
    var answers = db.Query(getanotherawnser, questionId);



    Session["totalpoints"] = totalpoints;
    Session["mail"] = mail;
}
<head>
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <link href="~/CSS-Ding/QuestionsStyle.css" rel="stylesheet">
</head>

<body style="background-color: #202225;">
    <div class="container-fluid" style="background-color: #202225; color: white; ">
        <div class="modal-dialog">
            <div class="modal-content" style="background-color: #202225">
                <div class="modal-header" style="background-color: #343a40; border-radius:5px">
                    <h3>@question</h3>
                </div>
                <div class="modal-body" style="background-color: #343a40; color: white; border-radius:5px">
                    <form method="post" action="~/Lessons/exampage.cshtml?lesson_Id=@lesson_Id&counter=@counter">
                        @foreach (var answer in answers)
                        {
                            <div class="quiz" id="quiz" data-toggle="buttons">
                                <span class="btn-label"><i class="glyphicon glyphicon-chevron-right"></i></span> <input type="radio" name="Q1" value="@answer.answer_Id" /> @answer.answer<br /><br />
                                <br />
                            </div>
                        }
                        @totalpoints
                        <span class="btn-label"></span> <input class="btn btn-primary" type="submit" value="volgende vraag" />
                    </form>
                    <div class="modal-footer text-muted" style="background-color: #343a40; color: white; border-radius:5px">
                        <span id="answer"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>